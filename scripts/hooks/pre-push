#!/usr/bin/bash

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

LINT_ERR="Lint check failure with errors. Run make check/lint for details..."
if ! make check/lint &> /dev/null; then echo "$LINT_ERR"; exit 1; fi

SECURITY_ERR="Source code consists of secure vulnerabilities. Run make check/security for details..."
if ! make check/security &> /dev/null; then echo "$SECURITY_ERR"; exit 1; fi

TEST_ERR="Failure to test. Run make check/test for details..."
if ! make check/test &> /dev/null; then echo "$TEST_ERR"; exit 1; fi

TEST_COVERAGE_ERR="Coverage threshold not satisfied. Run make check/coverage for details..."
if ! make check/coverage &> /dev/null; then echo "$TEST_COVERAGE_ERR"; exit 1; fi
