on:
  # admin/owner cases
  push:
    branches: [ main, develop ]
  # common cases
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ main, develop ]

jobs:
  lint:
    permissions:
      contents: read
      pull-requests: read
      checks: write
    name: Go lint check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: lint check
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ vars.GOLANGCI_LINT_VERSION }}
          only-new-issues: true

  security:
    permissions:
      security-events: write
    name: Go vulnerabilities check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: check for vulnerabilities
        uses: Templum/govulncheck-action@v1.0.0
        with:
          go-version: ${{ vars.GO_VERSION }}
          vulncheck-version: ${{ vars.GOVULNCHECK_VERSION }}

  test:
    name: Go test coverage check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: generate test coverage
        run: make check/test

      - name: check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          config: ${{ vars.TEST_COVER_CONFIG }}
